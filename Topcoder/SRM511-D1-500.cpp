#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<bits/stdc++.h>
using namespace std;

bool seen[512][55], dp[512][55];

class FiveHundredEleven {
public:
	vector<int> c;

	bool rec(int mem, int played){
		if (mem == 511) return true;
		if (played == (int)c.size()) return false;
		bool &ret = dp[mem][played];
		if (seen[mem][played]) return ret;
		seen[mem][played] = 1;
		ret = false;
		int cnt = 0;
		for (int i : c)
			if ((i | mem) == mem)
				cnt++;
		if (cnt > played && !rec(mem, played + 1)) ret = 1;
		for (int i : c)
			if ((i | mem) != mem && !rec((mem | i), played + 1))
				ret = 1;
		return ret;
	}
	string theWinner(vector <int> cards) {
		c = cards;
		memset(seen, 0, sizeof(seen));
		return (rec(0, 0) ? "Fox Ciel" : "Toastman");
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, vector <int> p0, bool hasAnswer, string p1) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p0[i];
	}
	cout << "}";
	cout << "]" << endl;
	FiveHundredEleven *obj;
	string answer;
	obj = new FiveHundredEleven();
	clock_t startTime = clock();
	answer = obj->theWinner(p0);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << "\"" << p1 << "\"" << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << "\"" << answer << "\"" << endl;
	if (hasAnswer) {
		res = answer == p1;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	}
	else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	}
	else if (hasAnswer) {
		cout << "Match :-)" << endl;
	}
	else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	vector <int> p0;
	string p1;

	{
		// ----- test 0 -----
		int t0[] = { 363, 6, 332, 264, 500, 471, 16, 59, 337, 72, 402, 61, 223, 489, 2, 84, 401, 128, 122, 285, 310, 337, 234, 207, 179, 379, 314, 490, 142, 53, 38, 361, 493, 464, 142, 57, 199, 150, 90, 444, 360, 287, 272, 293, 343, 429, 455, 277, 226, 71 };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		p1 = "Fox Ciel";
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	}
	else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
