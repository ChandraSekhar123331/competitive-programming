#include<bits/stdc++.h>
using namespace std;


class Foobar {
public:
	string censor(string plain, string code, string text);
};

vector<string> wo = { "heck", "gosh", "dang", "shucks", "fooey", "snafu", "fubar" };
bool as[256];

string Foobar::censor(string plain, string code, string text) {
	for (int i = 0; i < 256; i++) as[i] = 0;
	map<char, set<char>> to;
	for (int i = 0; i < wo.size(); i++) for (auto c : wo[i])
		to[c] = set<char>();
	for (auto t : text) to[t].insert(t);
	for (int i = 0; i < plain.size(); i++)
		to[plain[i]].insert(code[i]);
	for (int i = 0; i < text.size(); i++) if (text[i] != ' '){
		for (int j = 0; j < wo.size(); j++){
			bool ma = 1;
			int sp = 0;
			for (int k = i; k < i + wo[j].size() + sp; k++){
				if (k >= text.size()) {
					ma = 0;
					break;
				}
				if (text[k] == ' ') {
					sp++;
					continue;
				}
				if (to[wo[j][k - i - sp]].find(text[k]) == to[wo[j][k - i - sp]].end()){
					ma = 0;
					break;
				}
			}
			if (ma){
				for (int k = i; k < i + wo[j].size() + sp; k++)
					as[k] = 1;
			}
		}
	}
	for (int i = 0; i < text.size(); i++) if (as[i])
		text[i] = '*';
	cout << text;
	return text;
}

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, string p0, string p1, string p2, bool hasAnswer, string p3) {
	cout << "Test " << testNum << ": [" << "\"" << p0 << "\"" << "," << "\"" << p1 << "\"" << "," << "\"" << p2 << "\"";
	cout << "]" << endl;
	Foobar *obj;
	string answer;
	obj = new Foobar();
	clock_t startTime = clock();
	answer = obj->censor(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << "\"" << p3 << "\"" << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << "\"" << answer << "\"" << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	}
	else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	}
	else if (hasAnswer) {
		cout << "Match :-)" << endl;
	}
	else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	string p0;
	string p1;
	string p2;
	string p3;

	{
		// ----- test 0 -----
		p0 = "ogg";
		p1 = "08B";
		p2 = "I say f00ey on this dan8 problem and the danB set!";
		p3 = "I say ***** on this **** problem and the **** set!";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		p0 = "eafk";
		p1 = "88$$";
		p2 = "What the h 8 c $ is this s  n  8  $  u?";
		p3 = "What the ******* is this *************?";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		p0 = "au";
		p1 = "ui";
		p2 = "Dung? What the ding do you mean, dung?";
		p3 = "Dung? What the ding do you mean, ****?";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		p0 = "YYYggggabcdefghijklmnopqrstuvwxyz";
		p1 = "XXXggggABCDEFGHIJKLMNOPQRSTUVWXYZ";
		p2 = "DANGitALLtoHECK";
		p3 = "****itALLto****";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 4 -----
		p0 = "ddhhooggss<y}T?h:1+Wd~\\\\'\"";
		p1 = "D*HNO0G&S5Rfubar%f3k<:...";
		p2 = "Dangoshucks, I say, * a n & 0 5 H u c k 5.";
		p3 = "***********, I say, *********************.";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	}
	else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING



//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
