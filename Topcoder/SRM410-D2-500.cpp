#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;


class AddElectricalWires {
public:
	int maxNewWires(vector <string> wires, vector <int> gridConnections);
};


int p[55], no[55];
int par(int x){
	return (x == p[x]) ? x : p[x] = par(p[x]);
}

int AddElectricalWires::maxNewWires(vector <string> wires, vector <int> gridConnections) {
	int n = wires.size(), m = 0;
	for (int i = 0; i < n; i++) p[i] = i, no[i] = 1;
	for (int i = 0; i < n; i++)	for (int j = i + 1; j < n; j++) if (wires[i][j] == '1'){
		int x = par(i), y = par(j);
		m++;
		if (x == y) {
			p[y] = x;
			continue;
		}
		p[y] = x;
		no[x] += no[y];
	}
	int mx = -1, ret = 0, all = n;
	for (int i : gridConnections) {
		mx = max(mx, no[par(i)]);
		all -= no[par(i)];
		ret += no[par(i)] * (no[par(i)] - 1) / 2;
	}
	ret += all * (all - 1) / 2 + all*mx;
	return ret - m;
}

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, vector <string> p0, vector <int> p1, bool hasAnswer, int p2) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p0[i] << "\"";
	}
	cout << "}" << "," << "{";
	for (int i = 0; int(p1.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << p1[i];
	}
	cout << "}";
	cout << "]" << endl;
	AddElectricalWires *obj;
	int answer;
	obj = new AddElectricalWires();
	clock_t startTime = clock();
	answer = obj->maxNewWires(p0, p1);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p2 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p2;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	}
	else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	}
	else if (hasAnswer) {
		cout << "Match :-)" << endl;
	}
	else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	vector <string> p0;
	vector <int> p1;
	int p2;

	{
		// ----- test 0 -----
		string t0[] = { "000", "000", "000" };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 0 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 3;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		string t0[] = { "000", "000", "000" };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 0, 1 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 1;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		string t0[] = { "01", "10" };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 0 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		string t0[] = { "00000", "00000", "00000", "00000", "00000" };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 0, 1, 2, 3, 4 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 0;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 4 -----
		string t0[] = { "01000", "10100", "01010", "00100", "00000" };
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 2, 4 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 3;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 5 -----
		string t0[] = { "00000000000000000000000000000000000100000000000000", "00000000000000001000000000000000001000000000000000", "00000000000000000000000000000000000000000000000000", "00000010000001010000000010000000010000000000001000", "00000100000000000000000000000001000000000100000000", "00001000000000000000000000000001000000000010000000", "00010000000001010000000010000000010000000000001100", "00000000010000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000001000000000000000000000000000000000000000000", "00000000000000000000000000000000000000101000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00010010000000010000000010000000010000000000010000", "00000000000000000000000000000010000000000000000010", "00010010000001000000000010000000010000000000010100", "01000000000000000000001000000000001000000000000000", "00000000000000000000001000000000001000000000000000", "0000000000000000000000000000000000000000000000"
			"0000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000110000000000000000000", "00000000000000001100000000000000001000000000000000", "00000000000000000000000000000000000000000000000000", "00010010000001010000000000000000000000000000001000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000000000000000000000000000000000", "00000000000000000000010000000000000000000000000010", "00000000000000100000010000000000000000000000000000", "00001100000000000000000000000000000010000110000000", "00000000000000000000000000000000000000000000000000", "00010010000001010000000000000000000000000000011100", "01000000000000001100001000000000000000000000000000", "10000000000000000000000000000000000001000000000000", "00000000000000000000000000000001000000000000000000", "0000000000000000000000000000000000010000"
			};
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 37, 22, 3, 31, 38, 9, 29, 18 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 292;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 6 -----
		string t0[] = {
			
			};
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 43, 35, 25, 49, 29, 38, 13, 42, 10, 3 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 150;
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------
	}

	{
		// ----- test 7 -----
		string t0[] = {
			
			};
		p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
		int t1[] = { 4, 29, 49, 19, 47, 46, 45, 39, 26, 1 };
		p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
		p2 = 207;
		all_right = KawigiEdit_RunTest(7, p0, p1, true, p2) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	}
	else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING


//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
